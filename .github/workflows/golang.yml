name: Golang CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Runs in parallel except job have 'needs' key to wait another job was completed
jobs:
  test:
    name: "Testing"
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: "~1.16.6"

      - run: go env -w GO111MODULE=on && go env
      - run: go mod download
      - run: go mod tidy

      - uses: golangci/golangci-lint-action@v2.5.1
        with:
          # version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          # version: # optional
          # golangci-lint command line arguments
          # args: --sort-results
          # golangci-lint working directory, default is project root
          # working-directory: # optional
          # if set to true and the action runs on a pull request - the action outputs only newly found issues
          skip-go-installation: true
          # if set to true then the action don't cache or restore ~/go/pkg.
          skip-pkg-cache: true
          # if set to true then the action don't cache or restore ~/.cache/go-build.
          skip-build-cache: true

      - run: make test
